# Nginx Backend (Kubernetes öğrenmek için)
# Bu basit versiyonla Kubernetes konseptlerini test edeceğiz

apiVersion: apps/v1
kind: Deployment
metadata:
  name: medusa-backend
  labels:
    app: medusa-backend
  namespace: medusajs-staging
spec:
  replicas: 2  # 2 kopya (High Availability)
  selector:
    matchLabels:
      app: medusa-backend
  template:
    metadata:
      labels:
        app: medusa-backend
    spec:
      containers:
      - name: nginx
        image: turan919/medusajs-demo:7b84c5a6d6ea51d188b2f11f383bbe3517727ce7
        ports:
        - containerPort: 80
        
        # Custom nginx config (API simulation)
        
        # Health check
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 30
        
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
        
        # Resource limits
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      

---
# ConfigMap for Nginx (API endpoints simulation)
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: medusajs-staging
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;
        
        # Simulate MedusaJS API endpoints
        location /health {
            add_header Content-Type application/json;
            return 200 '{"status":"ok","message":"MedusaJS K8s Demo"}';
        }
        
        location /admin {
            add_header Content-Type text/html;
            return 200 '<h1>🏪 MedusaJS Admin</h1><p>Kubernetes deployment working!</p><p>Databases connected:</p><ul><li>✅ PostgreSQL</li><li>✅ Redis</li><li>✅ MeiliSearch</li></ul>';
        }
        
        location /store {
            add_header Content-Type text/html;
            return 200 '<h1>🛒 MedusaJS Store</h1><p>Welcome to your Kubernetes store!</p><p>Ready for real MedusaJS upgrade!</p>';
        }
        
        location / {
            add_header Content-Type text/html;
            return 200 '<h1>🚀 MedusaJS on Kubernetes</h1><p>Demo API running successfully!</p><p><a href="/admin">Admin Panel</a> | <a href="/store">Store</a> | <a href="/health">Health Check</a></p>';
        }
    }

---
# MedusaJS Backend Service (Port 80 için güncellendi)
apiVersion: v1
kind: Service
metadata:
  name: medusa-backend-service
spec:
  selector:
    app: medusa-backend
  ports:
  - protocol: TCP
    port: 9000
    targetPort: 80  # Nginx 80'de çalışıyor
  type: ClusterIP
